[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "specless"
version = "0.0.2"
description = "Package to learn specification and synthesize strategy from demonstrations"
authors = ["Kandai Watanabe <kandai.wata@gmail.com>"]
license = "LICENSE"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
bidict = "^0.23.1"
click = "^8.1.7"
# For Linux, Mac (not M1), and Windows
cvxopt = {version="^1.3.2", markers='sys_platform != "darwin" or platform_machine == "x86_64" or python'}
distinctipy = "^1.3.4"
graphviz = "^0.20.3"
gurobipy = {version="10.0.3"}
gym_minigrid = {git = "https://github.com/watakandai/gym-minigrid.git", branch="gym-minigrid-legacy"}
gymnasium = "^0.29.1"
ipykernel = "^6.29.5"
ipython = "^8.12.3"
# For MacOS M1
kvxopt={version="1.3.2.0", markers='sys_platform == "darwin" and platform_machine != "x86_64"', python = ">=3.9"} # 3.8 not supported. 3.8 gives an error. "This error originates from the build backend, and is likely not a problem with poetry but with cvxopt (1.3.2) not supporting PEP 517 builds"
ltlf2dfa = "^1.0.1"
matplotlib = "^3.7.5"
moviepy = "^1.0.3"
networkx = "^3.1"
numpy = "^1.24.4"
ortools = "^9.10.4067"
pm4py = "^2.7.11.11"
pydot = "^3.0.1"
pyyaml = "^6.0.1"
scikit-learn = "^1.3.2"
scipy = "^1.9.3"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
tox = "^3.28.0"
ruff = "^0.1.15"
mypy = "^1.11.0"
# pyroma = "^4.2"
# black = "^23.3.0"
# isort = "^5.11.5"
# Flake8-pyproject = "^1.2.3"
# pre-commit = "^2.20.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"
pytest-mock = "^3.14.0"
pytest-cov = "^4.1.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx-rtd-theme = "*"
sphinx = "*"
# sphinx-rtd-theme = "^1.3.0"
# sphinx = "^7.1.2"

# [tool.black]
# line-length = 88
# skip-string-normalization = true

# [tool.isort]
# profile = "black"
# line_length = 88
# multi_line_output = 3
# include_trailing_comma = true

# [tool.flake8]
# max-line-length = 88
# extend-ignore = ["E203", "E266", "W503",]
# max-complexity = 10
# extend-exclude = [".venv", "dist", ".github",]

[tool.mypy]
# ignore_errors = true
# disallow_untyped_defs = true
# ignore_missing_imports = true
# no_implicit_optional = true
# show_error_context = true
# show_column_numbers = true
# warn_return_any = true
# warn_unused_ignores = true
# warn_redundant_casts = true
exclude = ["dist/",]

[tool.ruff]
# Group violations by containing file.
output-format = "github"

[tool.pytest.ini_options]
addopts = [
    "--doctest-modules",
    "--doctest-glob=*.rst",
    "--ignore=examples",
    "--ignore=specless/api/ortools_interface.py",
    "--ignore=specless/cli",
    "--import-mode=importlib",
]
pythonpath = "src"

[tool.coverage.paths]
source = [
  "specless",
  "/Users/runner/work/*/*/specless",
]

[tool.coverage.run]
relative_files = true
source = [
  "specless",
]
branch = true

[tool.coverage.report]
show_missing = true
#fail_under = 100
