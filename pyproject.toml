[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "specless"
version = "0.0.2"
description = "Package to learn specification and synthesize strategy from demonstrations"
authors = ["Kandai Watanabe <kandai.wata@gmail.com>"]
license = "LICENSE"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
bidict = "*"
scikit-learn = "*"
numpy = "*"
networkx = "*"
matplotlib = "*"
pydot = "*"
graphviz = "*"
ipython = "*"
cvxopt = "*"
pm4py = "*"
gymnasium = "*"
ltlf2dfa = "*"
click = "*"
gym_minigrid = {git = "https://github.com/watakandai/gym-minigrid.git", branch="gym-minigrid-legacy"}
pyyaml = "*"
gurobipy = {version="10.0.3"}
ortools = "*"
distinctipy = "*"
scipy = "*"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
tox = "^3.27.1"
ruff = "^0.1.5"
mypy = "^1.7.0"
# pyroma = "^4.2"
# black = "^23.3.0"
# isort = "^5.11.5"
# Flake8-pyproject = "^1.2.3"
# pre-commit = "^2.20.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-mock = "^3.10.0"
pytest-cov = "^4.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx-rtd-theme = "^1.3.0"
sphinx = "^7.1.2"

# [tool.black]
# line-length = 88
# skip-string-normalization = true

# [tool.isort]
# profile = "black"
# line_length = 88
# multi_line_output = 3
# include_trailing_comma = true

# [tool.flake8]
# max-line-length = 88
# extend-ignore = ["E203", "E266", "W503",]
# max-complexity = 10
# extend-exclude = [".venv", "dist", ".github",]

[tool.mypy]
# ignore_errors = true
# disallow_untyped_defs = true
# ignore_missing_imports = true
# no_implicit_optional = true
# show_error_context = true
# show_column_numbers = true
# warn_return_any = true
# warn_unused_ignores = true
# warn_redundant_casts = true
exclude = ["dist/",]

[tool.ruff]
# Group violations by containing file.
output-format = "github"

[tool.pytest.ini_options]
addopts = [
    "--doctest-modules",
    "--doctest-glob=*.rst",
    "--ignore=examples",
    "--ignore=specless/api/ortools_interface.py",
    "--ignore=specless/cli",
    "--import-mode=importlib",
]
pythonpath = "src"

[tool.coverage.paths]
source = [
  "specless",
  "/Users/runner/work/*/*/specless",
]

[tool.coverage.run]
relative_files = true
source = [
  "specless",
]
branch = true

[tool.coverage.report]
show_missing = true
#fail_under = 100
